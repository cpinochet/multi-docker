sudo: required
language: generic

services:
  - docker

before_install:
  - docker build -t cpinochet/react-test -f ./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true cpinochet/react-test npm test

after_success:
  - echo "Travis_Job id is $TRAVIS_JOB_ID"
  - echo "Travis_commit is $TRAVIS_COMMIT"
  - STC=`echo ${TRAVIS_COMMIT::7}`
  - export $STC
  - echo $STC
  - echo "Travis_pull_requet_sha is $TRAVIS_PULL_REQUEST_SHA"
  - docker build -t cpinochet/multi-client:${STC} ./client
  - docker build -t cpinochet/multi-nginx:${STC} ./nginx
  - docker build -t cpinochet/multi-server:${STC} ./server
  - docker build -t cpinochet/multi-worker:${STC} ./worker
  # Log in to the docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # Take those images and push them to docker hub
  - docker tag cpinochet/multi-client:${STC} cpinochet/multi-client:latest
  - docker push cpinochet/multi-client:${STC}
  - docker push cpinochet/multi-client:latest
  # Multi-nginx
  - docker tag cpinochet/multi-nginx:${STC} cpinochet/multi-nginx:latest
  - docker push cpinochet/multi-nginx:${STC}
  - docker push cpinochet/multi-nginx:latest
  # Multi-server
  - docker tag cpinochet/multi-server:${STC} cpinochet/multi-server:latest
  - docker push cpinochet/multi-server:${STC}
  - docker push cpinochet/multi-server:latest
  # Multi-worker
  - docker tag cpinochet/multi-worker:${STC} cpinochet/multi-worker:latest
  - docker push cpinochet/multi-worker:${STC}
  - docker push cpinochet/multi-worker:latest
  # update deploy file
  - CURRENT_TAG=$(grep 'multi-client' Dockerrun.aws.json | awk -F ":" '{print $3}' | awk -F '"' '{print $1}')
  - echo $CURRENT_TAG
  - sed -i -r 's/'":$CURRENT_TAG"'/'":$STC"'/g' Dockerrun.aws.json
  - cat Dockerrun.aws.json | grep -i "$STC"

# deploy:
#   provider: elasticbeanstalk
#   region: 'us-east-2'
#   app: 'multi-docker'
#   env: 'MultiDocker-env'
#   bucket_name: 'elasticbeanstalk-us-east-2-923445559289'
#   bucket_path: 'docker-multi'
#   on:
#     branch: master
#   access_key_id: $AWS_ACCESS_KEY
#   secret_access_key: $AWS_SECRET_KEY
